!function(a){"use strict";var b=a.App=Ember.Application.create({LOG_TRANSITIONS:!1,currentPath:""});b.Router.map(function(){this.route("dashboard",{path:"/"}),this.route("notifications",{path:"/notifications"}),this.resource("main",{path:"main"},function(){this.route("pool",{path:"/pool/:pool_id"}),this.route("vm",{path:"/vm/:vm_id"}),this.resource("host",{path:"/host/:host_id"},function(){this.route("console",{path:"/console"})})}),this.route("addhost",{path:"/addhost"})})}(this);var get=Ember.get,set=Ember.set;Ember.PaginationMixin=Ember.Mixin.create({pages:function(){var a,b=this.get("availablePages"),c=[];for(i=0;b>i;i++)a=i+1,c.push({page_id:a.toString()});return c}.property("availablePages"),currentPage:function(){return parseInt(this.get("selectedPage"),10)||1}.property("selectedPage"),nextPage:function(){var a=this.get("currentPage")+1,b=this.get("availablePages");return b>=a?Ember.Object.create({id:a}):Ember.Object.create({id:this.get("currentPage")})}.property("currentPage","availablePages"),prevPage:function(){var a=this.get("currentPage")-1;return a>0?Ember.Object.create({id:a}):Ember.Object.create({id:this.get("currentPage")})}.property("currentPage"),availablePages:function(){return Math.ceil(this.get("content.length")/this.get("itemsPerPage")||1)}.property("content.length"),paginatedContent:function(){var a=this.get("selectedPage")||1,b=a*this.get("itemsPerPage"),c=a*this.get("itemsPerPage")-this.get("itemsPerPage"),d=this.get("content");return d.slice(c,b)}.property("selectedPage","content.@each")}),App.Focusable=Ember.Mixin.create({focused:!1,focusIn:function(){return this.set("focused",!0)},focusOut:function(){return this.set("focused",!1)}}),App.AsyncValidation=Ember.Mixin.create({valid:function(){var a,b=this;return this.get("focused")?(this.set("code",""),this.set("message","")):(a=this.get("value"),this.validate(a,function(c,d){return a!==b.get("value")||b.get("focused")?void 0:(b.set("code",c),b.set("message",d))}))}.observes("focused"),validate:function(a,b){return b("","")}}),App.TextField=Ember.View.extend(App.Focusable,App.AsyncValidation,{classNames:["control-group"],type:"text",value:"",placeholder:"",code:"",classNameBindings:["code"],message:"",template:Ember.Handlebars.compile('<div class="controls" >\n{{view Ember.TextField\nplaceholderBinding = "view.placeholder"\nvalueBinding = "view.value"\ntypeBinding = "view.type"\n  }}\n <span class="help-inline">{{view.message}}</span>\n</div>')}),App.ValidateTextField=App.TextField.extend({validate:function(a,b){return 0===a.length?b("error","Please enter a value."):b("success","Ok.")}}),App.HostUrlField=App.TextField.extend({placeholder:"IP Address",validate:function(a,b){if(0===a.length)return b("error","Please enter a valid url");b("loading","One moment while we check the adress."),console.log(a);var c=new XenAPI("","",a);return c.init(function(a){a?b("error","Host could not be found"):b("success","Found XENAPI instance!")})}}),App.LinkView=Ember.View.extend({tagName:"li",classNameBindings:["active"],active:Ember.computed(function(){var a=this.get("router"),b=this.get("route"),c=this.get("content"),d=[b];return c&&d.push(c),a.isActive.apply(a,d)}).property("router.url"),router:Ember.computed(function(){return this.get("controller").container.lookup("router:main")}),click:function(){var a=this.get("router"),b=this.get("route"),c=this.get("content");params=[b],c&&params.push(c),a.transitionTo.apply(a,params)}}),Ember.Handlebars.helper("convertDate",function(a){var b=moment(a,"YYYYMMDDTHH:mm:ss Z").format("dddd, MMMM Do YYYY, HH:mm");return new Handlebars.SafeString(b)}),Ember.Handlebars.helper("convertDateToAgo",function(a){var b=moment(a,"YYYYMMDDHH").fromNow();return new Handlebars.SafeString(b)}),Ember.Handlebars.helper("shortenNotification",function(a){var b=Handlebars.Utils.escapeExpression(a),c=b.substr(0,55);return new Handlebars.SafeString(c)}),Ember.Handlebars.helper("clean",function(a){var b=Handlebars.Utils.escapeExpression(a);return new Handlebars.SafeString(b)}),Ember.Handlebars.helper("colorizePowerState",function(a){var b="";switch(a){case"Running":b="green";break;case"Suspended":b="orange";break;case"Halted":b="red";break;default:b="unknown"}var c='<span class="'+b+'"></span>';return new Handlebars.SafeString(c)}),Ember.Handlebars.helper("check",function(a){var b=Handlebars.Utils.escapeExpression(a);return b=""==b?"&lt;None&gt;":b,new Handlebars.SafeString(b)}),App.Store=DS.Store.extend({revision:13,adapter:DS.LSAdapter.create({namespace:"xac.js"})}),App.Server=DS.Model.extend({uuid:DS.attr("string"),hostUrl:DS.attr("string"),hostName:DS.attr("string"),hostPassword:DS.attr("string"),hostToken:DS.attr("string"),pool:DS.belongsTo("App.Pools"),version:DS.belongsTo("App.hostVersion"),vms:DS.hasMany("App.VM"),vmsCount:function(){var a=this.get("vms").filterProperty("template",!1);return a.get("length")}.property("vms.@each")}),App.hostVersion=DS.Model.extend({versionMayor:DS.attr("string"),versionMinor:DS.attr("string"),buildNumber:DS.attr("string"),date:DS.attr("string"),networkBackend:DS.attr("string"),platformName:DS.attr("string"),platformVersion:DS.attr("string"),productBrand:DS.attr("string"),productVersion:DS.attr("string"),productVersionText:DS.attr("string"),xapi:DS.attr("string"),xen:DS.attr("string")}),App.VMConsole=DS.Model.extend({vm:DS.belongsTo("App.VM")}),App.VM=DS.Model.extend({uuid:DS.attr("string"),template:DS.attr("boolean"),controlDomain:DS.attr("boolean"),power_state:DS.attr("string"),name:DS.attr("string"),description:DS.attr("string"),vcpuStartup:DS.attr("number"),vcpuMax:DS.attr("number"),memory_dynamic_max:DS.attr("number"),memory_dynamic_min:DS.attr("number"),memory_overhead:DS.attr("number"),memory_static_max:DS.attr("number"),memory_static_min:DS.attr("number"),memory_target:DS.attr("number"),metrics:DS.attr("string"),console:DS.belongsTo("App.VMConsole"),host:DS.belongsTo("App.Server")}),App.Notification=DS.Model.extend({uuid:DS.attr("string"),name:DS.attr("string"),category:DS.attr("string"),body:DS.attr("string"),priority:DS.attr("string"),referenceUuid:DS.attr("string"),timestamp:DS.attr("string")}),App.Global=Ember.Object.extend({hosts:null,notifications:0,version:"0.0.3.6-alpha",pools:null,vms:null}),App.Global=App.Global.create({hosts:0,pools:0,vms:0}),App.Pools=DS.Model.extend({poolUUID:DS.attr("string"),poolName:DS.attr("string"),servers:DS.hasMany("App.Server"),serverCount:function(){var a=this.get("servers");return a.get("length")}.property("servers.@each")}),App.DashboardRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Dashboard")},setupController:function(a){a.set("buildVersion",App.Global.get("version"))},renderTemplate:function(){this.render(),this.render("dashboardNotifications",{outlet:"notifications",into:"dashboard",controller:this.controllerFor("dashboardNotifications")})},setupController:function(){var a=App.Notification.find({});this.controllerFor("dashboardNotifications").set("content",a);var b=this;a.on("didLoad",function(){b.controllerFor("dashboardNotifications").set("notifications",a.get("length"))})}}),App.NotificationsRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Notifications")},model:function(){return App.Notification.find()}}),App.ServersRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Servers")},model:function(){return App.Server.find()}}),App.ServersIndexRoute=Ember.Route.extend({redirect:function(){if(App.Global.hosts>0){var a=this.modelFor("servers").get("firstObject");this.transitionTo("view.index",a)}}}),App.SettingsRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Settings")}}),App.ApplicationRoute=Ember.Route.extend({events:{addHost:function(){App.Route.showModal(this,"addHost")},closeModal:function(){this.render("hide_modal",{into:"modal",outlet:"modalBody"})}},renderTemplate:function(){this.render(),this.render("menu",{outlet:"menu",into:"application",controller:"menu"})},setupController:function(a){a.set("buildVersion",App.Global.get("version"))},activate:function(){App.Scheduler()},deactivate:function(){App.Scheduler.stop()}}),App.OverviewRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Overview")},model:function(){return App.Pools.find()}}),App.OverviewIndexRoute=Ember.Route.extend({redirect:function(){if(App.Global.pools>0){var a=this.modelFor("overview").get("firstObject");this.transitionTo("view",a)}}}),App.ViewRoute=Ember.Route.extend({model:function(a){return App.Pools.find(a.pools_id)}}),App.HostVmRoute=Ember.Route.extend({model:function(a){return App.VM.find(a.vm_id)}}),App.Route=Em.Route.extend({activate:function(){this._super()}}),App.Route.reopenClass({showModal:function(a,b,c){a.controllerFor("modal").set("modalClass",null),a.render(b,{outlet:"modalBody",into:"modal"});var d=a.controllerFor(b);d&&(c&&d.set("model",c),d&&d.onShow&&(Ember.debug("show"),d.onShow()))}}),App.MainRoute=Ember.Route.extend({renderTemplate:function(){this.render(),this.render("mainPools",{outlet:"pools",into:"main",controller:this.controllerFor("mainPools")}),this.render("mainHosts",{outlet:"hosts",into:"main",controller:this.controllerFor("mainHosts")}),this.render("mainVMs",{outlet:"vms",into:"main",controller:this.controllerFor("mainVMs")})},setupController:function(){var a=App.Pools.find();this.controllerFor("mainPools").set("model",a);var b=App.Server.find();this.controllerFor("mainHosts").set("model",b);var c=App.VM.find();this.controllerFor("mainVMs").set("model",c)},model:function(){return App.Pools.find()}}),App.MainPoolRoute=Ember.Route.extend({model:function(a){return App.Pools.find(a.pool_id)},setupController:function(){var a=this.modelFor("mainPool").get("poolName");this.controllerFor("mainPool").set("model",this.modelFor("mainPool")),this.controllerFor("mainHosts").set("model",this.modelFor("mainPool").get("servers")),this.controllerFor("mainHosts").set("filter",!0),this.controllerFor("mainHosts").set("filterName",a)}}),App.MainHostRoute=Ember.Route.extend({model:function(){return App.Server.find()}}),App.HostRoute=Ember.Route.extend({model:function(a){return App.Server.find(a.host_id)},setupController:function(){this.controllerFor("host").set("model",this.modelFor("host")),this.controllerFor("hostIndex").set("model",this.modelFor("host")),this.controllerFor("hostConsole").set("content",this.modelFor("host")),this.controllerFor("mainVMs").set("model",this.modelFor("host").get("vms")),this.controllerFor("mainVMs").set("filter",!0),this.controllerFor("mainVMs").set("filterName",this.modelFor("host").get("hostUrl")),this.controllerFor("mainVMs").set("filterType","host")}}),App.MainVmRoute=Ember.Route.extend({model:function(a){return App.VM.find(a.vm_id)}}),App.ApplicationController=Ember.Controller.extend({init:function(){App.Pools.find({}).then(function(){var a=App.Pools.all().content.length;App.Global.set("pools",a)}),App.Server.find({}).then(function(){var a=App.Server.all().content.length;App.Global.set("hosts",a)}),App.VM.find({template:!1}).then(function(){var a=App.VM.all().content.get("length");App.Global.set("vms",a)})},updateCurrentPath:function(){var a=this.get("currentPath");App.set("currentPath",a)}.observes("currentPath")}),App.MenuController=Ember.Controller.extend({serverCount:function(){return App.Global.hosts}.property("App.Global.hosts"),notifications:function(){return App.Global.notifications}.property("App.Global.notifications")}),App.ServersController=Ember.ArrayController.extend({hasHosts:!1,init:function(){var a=this;App.Global.hosts>0?a.set("hasHosts",!0):a.set("hasHosts",!1)}.observes("App.Global.hosts")}),App.ServersIndexController=Ember.ArrayController.extend({deleteServer:function(a){a.deleteRecord(),App.Global.set("hosts",App.Global.get("hosts")-1),a.save()}}),App.OverviewController=Ember.ArrayController.extend({hasPools:!1,stateActive:!1,onStateChange:function(){var a=this;"pool"===App.ViewState.get("currentState.name")?a.set("stateActive",!0):a.set("stateActive",!1)}.observes("App.ViewState.currentState.name"),init:function(){var a=this;App.Global.pools>0?a.set("hasPools",!0):a.set("hasPools",!1),this.onStateChange()}.observes("App.Global.pools")}),App.DashboardController=Ember.Object.extend({hosts:function(){return App.Global.hosts}.property("App.Global.hosts"),hostsUnit:function(){return 1===this.get("hosts")?"Host":"Hosts"}.property("hosts"),pools:function(){return App.Global.pools}.property("App.Global.pools"),poolsUnit:function(){return 1===this.get("pools")?"Pool":"Pools"}.property("pools"),vms:function(){return App.Global.vms}.property("App.Global.vms"),vmsUnit:function(){return 1===this.get("vms")?"VM":"VMS"}.property("vms"),notfications:function(){var a=App.Notification.find();return a}.property("App.Notification.@each"),buildVersion:App.Global.version}),App.DashboardNotificationsController=Ember.ArrayController.extend({selectedPage:1,sortProperties:["timestamp"],sortAscending:!1,content:this.get("content")}),App.DashboardNotificationsController=Ember.ArrayController.extend(Ember.PaginationMixin,{itemsPerPage:5}),App.AddHostController=Ember.Controller.extend({isNew:!0,authFailed:!1,update:function(){this.isNew?(this.set("hostUrl",""),this.set("hostName",""),this.set("hostPassword","")):(this.set("hostUrl",this.content.get("hostUrl")),this.set("hostName",this.content.get("hostName")),this.set("hostPassword",this.content.get("hostPassword")))}.observes("isNew"),reset:function(){this.setProperties({hostUrl:"",hostName:"",hostPassword:""})},errorMessage:null,feedback:function(){return"Feedback2"}.property("feedback"),createServer:function(){var a=this,b=this.getProperties("hostUrl","hostName","hostPassword");if($.trim(hostUrl)&&$.trim(hostName)&&$.trim(hostPassword)){if(this.isNew){var c=$(".createServerInput"),d=$(".help-inline"),e=$("#xac-modal"),f=c.html(),g=this,h='<li class="add-host-loading">Loading...</li>';c.html(h),App.EventsInit(b.hostUrl,b.hostName,b.hostPassword,function(b){b?a.set("errorMessage",b):(g.transitionToRoute("dashboard"),e.modal("hide"),d.html(""),c.html(f),g.set("hostUrl",""),g.set("hostName",""),g.set("hostPassword",""))})}else{var i=this.get("model");i.set("hostUrl",hostUrl),i.set("hostPassword",hostPassword),i.set("hostName",hostName),this.get("store").commit(),i.one("didUpdate",this,function(){this.transitionToRoute("servers.index")})}this.set("hostUrl",""),this.set("hostName",""),this.set("hostPassword","")}}}),App.ModalController=Ember.Controller.extend({}),App.NotificationsController=Ember.ArrayController.extend({hasHosts:!1,hasNotifications:!1,init:function(){App.Global.get("hosts")>0?(this.set("hasHosts",!0),this.set("hasNotifications",!0)):(this.set("hasHosts",!1),this.set("hasNotifications",!1))}.observes("App.Global.hosts"),sortProperties:["timestamp"],sortAscending:!1,content:this.get("model")}),App.HostConsoleController=Ember.Object.extend({readable:function(a){return JSON.stringify(a,4,4)},apiRequest:function(){this.set("isProcessing",!0);var a=this.get("content"),b=this.get("query"),c=this,d=new XenAPI(a.get("hostName"),a.get("hostPassword"),a.get("hostUrl"));if(""!=b&&b.indexOf(".")>0){var e=b.split("."),f=e[0],g=e[1];d.init(function(a){a?c.set("output",c.readable(a)):d[f][g](function(a,b){a?c.set("output",c.readable(a)):c.set("output",c.readable(b)),c.set("isProcessing",!1)})})}else this.set("output","Invalid input."),this.set("isProcessing",!1)},isProcessing:!1,output:""}),App.MainController=Ember.Controller.extend({hasHosts:!1,init:function(){App.Global.hosts>0?this.set("hasHosts",!0):this.set("hasHosts",!1)}.observes("App.Global.hosts")}),App.HostController=Ember.Controller.extend({}),App.HostIndexController=Ember.Controller.extend({}),App.MainPoolsController=Ember.ArrayController.extend({}),App.MainHostsController=Ember.ArrayController.extend({filter:!1,noVms:function(){return this.get("content").get("vms").get("length")}.property("model.vms.@each"),controlDomain:function(){var a=this.get("content").get("vms").filterProperty("controlDomain").firstObject();console.log(a)}.property("model.vms.@each"),removeFilter:function(){this.set("model",App.Server.find()),this.set("filter",!1),"main.pool"===App.get("currentPath")&&this.transitionToRoute("main")}}),App.MainVMsController=Ember.ArrayController.extend({noTemplates:function(){var a=this.get("model");return a.filter(function(a){return!a.get("template")&&!a.get("controlDomain")})}.observes("filter").property("model.@each"),filter:!1,removeFilter:function(){this.set("model",App.VM.find()),this.set("filter",!1),console.log(App.get("currentPath")),"main.host.index"===App.get("currentPath")&&this.transitionToRoute("main")}}),App.ServersView=Ember.View.extend({hasHosts:!1,onHostChange:function(){this.set("hasHosts",this.get("controller.hasHosts")),this.rerender()}.observes("this.controller.hasHosts")}),App.NotificationsView=Ember.View.extend({hasHosts:!1,hasNotifications:!1,onHostsChange:function(){this.get("controller").get("hasHosts")>0?this.set("hasHosts",!0):this.set("hasHosts",!1)}.observes("this.controller.hasHosts"),onNotificationsChange:function(){this.get("controller").get("hasNotifications")>0?this.set("hasNotifications",!0):this.set("hasNotifications",!1)}.observes("this.controller.hasNotifications"),didInsertElement:function(){App.Global.set("notifications",0)}}),App.ModalBodyView=Ember.View.extend({didInsertElement:function(){$("#xac-modal").modal("show");var a=this.get("controller");$("#xac-modal").on("hide.xac",function(){a.send("closeModal")}),$("#modal-alert").hide();var b=this;Ember.run.schedule("afterRender",function(){b.$("input:first").focus()})},willDestroyElement:function(){$("#xac-modal").off("hide.xac")}}),App.ModalView=Ember.View.extend({elementId:"xac-modal",templateName:"modal/modal",classNameBindings:[":modal",":hidden","controller.modalClass"]}),App.AddHostView=App.ModalBodyView.extend({templateName:"modal/addHost",title:"addHost"}),App.MainView=Ember.View.extend({hasHosts:!1,onHostsChange:function(){this.get("controller").get("hasHosts")>0?this.set("hasHosts",!0):this.set("hasHosts",!1)}.observes("this.controller.hasHosts")}),App.DashboardNotificationsView=Ember.View.extend({templateName:"dashboardNotifications",viewNotifications:!1,hasNotifications:function(){return this.get("change")>0?!0:!1}.property("change"),getNotifications:function(){this.set("change",this.get("controller").get("notifications"))}.observes("this.controller.notifications")});