!function(a){"use strict";var b=a.App=Ember.Application.create({LOG_TRANSITIONS:!0});b.Router.map(function(){this.route("dashboard",{path:"/"}),this.resource("servers",{path:"/servers"},function(){this.route("new"),this.route("delete",{path:"/delete/:server_id"}),this.route("edit",{path:"/edit/:server_id"})}),this.route("notifications",{path:"/notifications"}),this.route("settings",{path:"/settings"}),this.route("overview",{path:"/overview"})}),b.ready=function(){Ember.debug("Ready run")}}(this),App.Store=DS.Store.extend({revision:13,adapter:DS.LSAdapter.create()}),App.LSAdapter=DS.LSAdapter.extend({namespace:"xac.js"}),App.Server=DS.Model.extend({hostUrl:DS.attr("string"),hostName:DS.attr("string"),hostPassword:DS.attr("string"),versionMayor:DS.attr("number"),versionMinor:DS.attr("number"),version:DS.attr("string")}),App.Global=Ember.Object.extend({number:null,notifications:0,version:"0.0.2.9"}),App.Global=App.Global.create({number:0}),App.DashboardRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Dashboard")}}),App.NotificationsRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Notifications")}}),App.ServersRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Servers")}}),App.ServersIndexRoute=Ember.Route.extend({model:function(){return console.log(App.Server.find()),App.Server.find()}}),App.ServersNewRoute=Ember.Route.extend({setupController:function(){this.controllerFor("servers.new").setProperties({isNew:!0})}}),App.ServersEditRoute=Ember.Route.extend({model:function(a){return App.Server.find(a.server_id)},renderTemplate:function(){this.controllerFor("servers.new").update(),this.render("servers/new")},setupController:function(a,b){this.controllerFor("servers.new").setProperties({isNew:!1,content:b})}}),App.ServersDeleteRoute=Ember.Route.extend({model:function(a){return App.Server.find(a.server_id)},setupController:function(a,b){this.controllerFor("servers.new").setProperties({isNew:!1,content:b})}}),App.SettingsRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Settings")}}),App.ApplicationRoute=Ember.Route.extend({model:function(){return App.Server.find()},renderTemplate:function(){this.render(),this.render("menu",{outlet:"menu",into:"application",controller:"menu"}),this.render("footer",{outlet:"footer",into:"application"})},setupController:function(a){a.set("buildVersion",App.Global.get("version"))}}),App.ApplicationController=Ember.Controller.extend({init:function(){App.Server.find({}).then(function(){var a=App.Server.all().content.length;App.Global.set("number",a)})}}),App.MenuController=Ember.Object.extend({serverCount:function(){return App.Global.number}.property("App.Global.number"),notifications:function(){return App.Global.notifications}.property("App.Global.notifications")}),App.ServersIndexController=Ember.ArrayController.extend({deleteServer:function(a){a.deleteRecord(),App.Global.set("number",App.Global.get("number")-1),a.save()}}),App.ServersNewController=Ember.Controller.extend(Ember.Evented,{isNew:!0,authFailed:!1,update:function(){this.isNew?(this.set("hostUrl",""),this.set("hostName",""),this.set("hostPassword","")):(this.set("hostUrl",this.content.get("hostUrl")),this.set("hostName",this.content.get("hostName")),this.set("hostPassword",this.content.get("hostPassword")))}.observes("isNew"),serverExists:function(){console.log("change")}.observes("authFailed"),createServer:function(){var a=this.get("hostUrl"),b=this.get("hostName"),c=this.get("hostPassword");if($.trim(a)&&$.trim(b)&&$.trim(c)){if(this.isNew){$(".createServerInput input").attr("disabled","disabled");var d=this,e=$(".createServerInput input"),f=new XenAPI(b,c,a);return f.init(function(g){g?e.removeAttr("disabled"):($("#add-server").val("Loading..."),f.serverVersion(function(f,g){if(f)d.set("authFailed",!0),e.removeAttr("disabled"),$("#add-server").val("Add Server");else{console.log(g);var h=App.Server.createRecord({hostUrl:a,hostName:b,hostPassword:c,versionMayor:g.mayor,versionMinor:g.minor,version:g.version});App.Global.set("number",App.Global.get("number")+1),App.Global.set("notifications",App.Global.get("notifications")+1),h.store.commit(),d.set("hostUrl",""),d.set("hostName",""),d.set("hostPassword",""),h.one("didCreate",this,function(){e.removeAttr("disabled"),d.transitionToRoute("servers.index"),$("#add-server").val("Add Server")})}}))})}var g=this.get("model");g.set("hostUrl",a),g.set("hostPassword",c),g.set("hostName",b),this.get("store").commit(),g.one("didUpdate",this,function(){this.transitionToRoute("servers.index")}),this.set("hostUrl",""),this.set("hostName",""),this.set("hostPassword","")}}}),App.NotificationsView=Ember.View.extend({didInsertElement:function(){App.Global.set("notifications",0)}}),App.Focusable=Ember.Mixin.create({focused:!1,focusIn:function(){return this.set("focused",!0)},focusOut:function(){return this.set("focused",!1)}}),App.AsyncValidation=Ember.Mixin.create({valid:function(){var a,b=this;return this.get("focused")?(this.set("code",""),this.set("message","")):(a=this.get("value"),this.validate(a,function(c,d){return a!==b.get("value")||b.get("focused")?void 0:(b.set("code",c),b.set("message",d))}))}.observes("focused"),validate:function(a,b){return b("","")}}),App.TextField=Ember.View.extend(App.Focusable,App.AsyncValidation,{classNames:["control-group"],type:"text",value:"",placeholder:"",code:"",classNameBindings:["code"],message:"",template:Ember.Handlebars.compile('<div class="controls" >\n{{view Ember.TextField\nplaceholderBinding = "view.placeholder"\nvalueBinding = "view.value"\ntypeBinding = "view.type"\n  }}\n <span class="help-inline">{{view.message}}</span>\n</div>')}),App.ValidateTextField=App.TextField.extend({validate:function(a,b){return 0===a.length?b("error","Please enter a value."):b("success","Ok.")}}),App.HostUrlField=App.TextField.extend({placeholder:"IP Address",validate:function(a,b){if(0===a.length)return b("error","Please enter a valid url");b("loading","One moment while we check the adress."),console.log(a);var c=new XenAPI("","",a);return c.init(function(a){a?b("error","Host could not be found"):b("success","Found XENAPI instance!")})}});