!function(a){"use strict";var b=a.App=Ember.Application.create({LOG_TRANSITIONS:!1,ready:function(){Ember.debug("[Start]"),b.ScheduleEventRetrieval}});b.Router.map(function(){this.route("dashboard",{path:"/"}),this.resource("servers",{path:"/servers"},function(){this.route("new"),this.resource("view",{path:"/:server_id"},function(){this.route("delete",{path:"/delete"}),this.route("edit",{path:"/edit"})})}),this.route("notifications",{path:"/notifications"}),this.route("settings",{path:"/settings"}),this.resource("overview",{path:"/overview/"},function(){this.route("view",{path:"/:pools_id"}),this.resource("server",{path:"/server"},function(){this.resource("vm",{path:"/vm"},function(){this.route("new")})})}),this.route("addhost",{path:"/addhost"})}),b.OverviewPoolsRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Overview - Pool")}})}(this),App.Store=DS.Store.extend({revision:13,adapter:DS.LSAdapter.create({namespace:"xac.js"})}),App.Server=DS.Model.extend({hostUrl:DS.attr("string"),hostName:DS.attr("string"),hostPassword:DS.attr("string"),hostToken:DS.attr("string"),pool:DS.belongsTo("App.Pools"),version:DS.belongsTo("App.hostVersion"),vms:DS.hasMany("App.VM")}),App.hostVersion=DS.Model.extend({versionMayor:DS.attr("string"),versionMinor:DS.attr("string"),buildNumber:DS.attr("string"),date:DS.attr("string"),networkBackend:DS.attr("string"),platformName:DS.attr("string"),platformVersion:DS.attr("string"),productBrand:DS.attr("string"),productVersion:DS.attr("string"),productVersionText:DS.attr("string"),xapi:DS.attr("string"),xen:DS.attr("string")}),App.VMConsole=DS.Model.extend({vm:DS.belongsTo("App.VM")}),App.VM=DS.Model.extend({uuid:DS.attr("string"),controlDomain:DS.attr("boolean"),name:DS.attr("string"),description:DS.attr("string"),vcpuStartup:DS.attr("number"),vcpuMax:DS.attr("number"),memory_dynamic_max:DS.attr("number"),memory_dynamic_min:DS.attr("number"),memory_overhead:DS.attr("number"),memory_static_max:DS.attr("number"),memory_static_min:DS.attr("number"),memory_target:DS.attr("number"),metrics:DS.attr("string"),console:DS.belongsTo("App.VMConsole"),host:DS.belongsTo("App.Server")}),App.Global=Ember.Object.extend({hosts:null,notifications:0,version:"0.0.2.9-alpha",pools:null}),App.Global=App.Global.create({hosts:0,pools:0}),App.Pools=DS.Model.extend({poolUUID:DS.attr("string"),poolName:DS.attr("string"),servers:DS.hasMany("App.Server"),serverCount:function(){var a=this.get("servers");return a.get("length")}.property("servers.@each")}),App.DashboardRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Dashboard")},setupController:function(a){a.set("buildVersion",App.Global.get("version"))}}),App.NotificationsRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Notifications")}}),App.ServersRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Servers")},model:function(){return App.Server.find()}}),App.ServersIndexRoute=Ember.Route.extend({redirect:function(){if(App.Global.hosts>0){var a=this.modelFor("servers").get("firstObject");this.transitionTo("view.index",a)}}}),App.ViewIndexRoute=Ember.Route.extend({model:function(a){return App.Server.find(a.server_id)}}),App.NewRoute=Ember.Route.extend({setupController:function(){this.controllerFor("servers.new").setProperties({isNew:!0})}}),App.ViewEditRoute=Ember.Route.extend({model:function(a){return console.log(console.log(this.server_id)),App.Server.find(a.server_id)},renderTemplate:function(){this.controllerFor("servers.new").update(),this.render("view/new")},setupController:function(a,b){this.controllerFor("servers.new").setProperties({isNew:!1,content:b})}}),App.ViewDeleteRoute=Ember.Route.extend({model:function(a){return App.Server.find(a.server_id)}}),App.SettingsRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Settings")}}),App.ApplicationRoute=Ember.Route.extend({events:{addHost:function(){App.Route.showModal(this,"addHost")},closeModal:function(){this.render("hide_modal",{into:"modal",outlet:"modalBody"})}},renderTemplate:function(){this.render(),this.render("menu",{outlet:"menu",into:"application",controller:"menu"}),this.render("footer",{outlet:"footer",into:"application"})},setupController:function(a){a.set("buildVersion",App.Global.get("version"))},activate:function(){App.Scheduler.start()},deactivate:function(){App.Scheduler.stop()}}),App.OverviewRoute=Ember.Route.extend({activate:function(){$(document).attr("title","XAC - Overview")},model:function(){return App.Pools.find()}}),App.OverviewIndexRoute=Ember.Route.extend({redirect:function(){if(App.Global.pools>0){var a=this.modelFor("overview").get("firstObject");this.transitionTo("overview.view",a)}}}),App.OverviewViewRoute=Ember.Route.extend({model:function(a){return App.Pools.find(a.pools_id)}}),App.Route=Em.Route.extend({activate:function(){this._super()}}),App.Route.reopenClass({showModal:function(a,b,c){a.controllerFor("modal").set("modalClass",null),a.render(b,{outlet:"modalBody",into:"modal"});var d=a.controllerFor(b);d&&(c&&d.set("model",c),d&&d.onShow&&(Ember.debug("show"),d.onShow()))}}),App.ApplicationController=Ember.Controller.extend({init:function(){App.Pools.find(),App.Pools.find({}).then(function(){var a=App.Pools.all().content.length;App.Global.set("pools",a)}),App.Server.find(),App.Server.find({}).then(function(){var a=App.Server.all().content.length;App.Global.set("hosts",a)})}}),App.MenuController=Ember.Controller.extend({serverCount:function(){return App.Global.hosts}.property("App.Global.hosts"),notifications:function(){return App.Global.notifications}.property("App.Global.notifications")}),App.ServersIndexController=Ember.ArrayController.extend({deleteServer:function(a){a.deleteRecord(),App.Global.set("hosts",App.Global.get("hosts")-1),a.save()}}),App.ServersNewController=Ember.Controller.extend(Ember.Evented,{isNew:!0,authFailed:!1,update:function(){this.isNew?(this.set("hostUrl",""),this.set("hostName",""),this.set("hostPassword","")):(this.set("hostUrl",this.content.get("hostUrl")),this.set("hostName",this.content.get("hostName")),this.set("hostPassword",this.content.get("hostPassword")))}.observes("isNew"),serverExists:function(){console.log("change")}.observes("authFailed"),createServer:function(){var a=this.get("hostUrl"),b=this.get("hostName"),c=this.get("hostPassword");if($.trim(a)&&$.trim(b)&&$.trim(c)){if(this.isNew){$(".createServerInput input").attr("disabled","disabled");var d=this,e=$(".createServerInput input");App.EventsInit(a,b,c,function(a){a?console.log(a):(d.set("hostUrl",""),d.set("hostName",""),d.set("hostPassword",""),f.one("didCreate",this,function(){e.removeAttr("disabled"),d.transitionToRoute("servers.index"),$("#add-server").val("Add Server")}))})}else{var f=this.get("model");f.set("hostUrl",a),f.set("hostPassword",c),f.set("hostName",b),this.get("store").commit(),f.one("didUpdate",this,function(){this.transitionToRoute("servers.index")})}this.set("hostUrl",""),this.set("hostName",""),this.set("hostPassword","")}}}),App.OverviewController=Ember.ArrayController.extend({hasPools:!1,init:function(){var a=this;App.Global.pools>0?a.set("hasPools",!0):a.set("hasPools",!1)}.observes("App.Global.pools")}),App.OverviewView=Ember.View.extend({hasPools:!1,onPoolsChange:function(){this.set("hasPools",this.get("controller.hasPools")),this.rerender()}.observes("this.controller.hasPools")}),App.DashboardController=Ember.Object.extend({servers:function(){return App.Global.hosts}.property("App.Global.hosts"),pools:function(){return App.Global.pools}.property("App.Global.pools")}),App.AddHostController=Ember.Controller.extend({}),App.ModalController=Ember.Controller.extend({}),App.NotificationsView=Ember.View.extend({didInsertElement:function(){App.Global.set("notifications",0)}}),App.ModalBodyView=Ember.View.extend({didInsertElement:function(){$("#xac-modal").modal("show");var a=this.get("controller");$("#xac-modal").on("hide.xac",function(){a.send("closeModal")}),$("#modal-alert").hide();var b=this;Ember.run.schedule("afterRender",function(){b.$("input:first").focus()})},willDestroyElement:function(){$("#xac-modal").off("hide.xac")}}),App.ModalView=Ember.View.extend({elementId:"xac-modal",templateName:"modal/modal",classNameBindings:[":modal",":fade",":hidden","controller.modalClass"]}),App.AddHostView=App.ModalBodyView.extend({templateName:"modal/addHost",title:"addHost"}),App.Focusable=Ember.Mixin.create({focused:!1,focusIn:function(){return this.set("focused",!0)},focusOut:function(){return this.set("focused",!1)}}),App.AsyncValidation=Ember.Mixin.create({valid:function(){var a,b=this;return this.get("focused")?(this.set("code",""),this.set("message","")):(a=this.get("value"),this.validate(a,function(c,d){return a!==b.get("value")||b.get("focused")?void 0:(b.set("code",c),b.set("message",d))}))}.observes("focused"),validate:function(a,b){return b("","")}}),App.TextField=Ember.View.extend(App.Focusable,App.AsyncValidation,{classNames:["control-group"],type:"text",value:"",placeholder:"",code:"",classNameBindings:["code"],message:"",template:Ember.Handlebars.compile('<div class="controls" >\n{{view Ember.TextField\nplaceholderBinding = "view.placeholder"\nvalueBinding = "view.value"\ntypeBinding = "view.type"\n  }}\n <span class="help-inline">{{view.message}}</span>\n</div>')}),App.ValidateTextField=App.TextField.extend({validate:function(a,b){return 0===a.length?b("error","Please enter a value."):b("success","Ok.")}}),App.HostUrlField=App.TextField.extend({placeholder:"IP Address",validate:function(a,b){if(0===a.length)return b("error","Please enter a valid url");b("loading","One moment while we check the adress."),console.log(a);var c=new XenAPI("","",a);return c.init(function(a){a?b("error","Host could not be found"):b("success","Found XENAPI instance!")})}}),App.LinkView=Ember.View.extend({tagName:"li",classNameBindings:["active"],active:Ember.computed(function(){var a=this.get("router"),b=this.get("route"),c=this.get("content"),d=[b];return c&&d.push(c),a.isActive.apply(a,d)}).property("router.url"),router:Ember.computed(function(){return this.get("controller").container.lookup("router:main")}),click:function(){var a=this.get("router"),b=this.get("route"),c=this.get("content");params=[b],c&&params.push(c),a.transitionTo.apply(a,params)}}),App.FetchInitial=function(a,b,c,d){var e=new XenAPI(b,c,a),f={};e.init(function(a){return a?d(!0,a):(e.serverVersion(function(a,b){return a?d(!0,a):(f.version.minor=b.minor,f.version.mayor=b.mayor,f.version.buildNumber=b.version.build_number,f.version.date=b.version.date,f.version.networkBackend=b.version.network_backend,f.version.platformName=b.version.platform_name,f.version.platformVersion=b.version.platform_version,f.version.productBrand=b.version.product_brand,f.version.productVersion=b.version.product_version,f.version.productVersionText=b.version.product_version_text,f.version.xapi=b.version.xapi,f.version.xen=b.version.xen,d(null,f))}),void 0)})};